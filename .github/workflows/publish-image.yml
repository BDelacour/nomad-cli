name: Publish Docker image

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

env:
  DOCKER_IMAGE: nomad-cli
  DOCKER_BUILDKIT: 1

jobs:
  generate_build_matrix:
    name: Call generate-build-matrix.py to configure next job matrix
    runs-on: ubuntu-latest
    container: python:3.10-slim
    outputs:
      matrix: ${{ steps.build-matrix.outputs.MATRIX }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Run get-versions-to-build.py script
        id: build-matrix
        env:
          DOCKER_NAMESPACE: ${{ secrets.DOCKER_USERNAME }}
        run: |
          python generate-build-matrix.py >> $GITHUB_OUTPUT

  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: generate_build_matrix
    if: ${{ toJson(fromJson(needs.generate_build_matrix.outputs.matrix).tags) != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate_build_matrix.outputs.matrix) }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate image tags
        id: generate-image-tags
        run: |
          content="TAGS=${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ matrix.tags }}"
          if [ "${{ matrix.latest }}" == "true" ]; then
            content+=",${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest"
          fi
          printf "$content\n" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ matrix.tags }}
          tags: ${{ steps.generate-image-tags.outputs.TAGS }}
