name: Publish Docker image

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

env:
  DOCKER_IMAGE: nomad-cli
  DOCKER_BUILDKIT: 1

jobs:
  generate_build_matrix:
    name: Call generate-build-matrix.py to configure next job matrix
    runs-on: ubuntu-latest
    container: python:3.10-slim
    outputs:
      matrix: ${{ steps.build-matrix.outputs.TAGS }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Run get-versions-to-build.py script
        id: build-matrix
        env:
          DOCKER_NAMESPACE: ${{ secrets.DOCKER_USERNAME }}
        run: |
          content=$(python generate-build-matrix.py)
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=TAGS::$content"

  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: generate_build_matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tags: ${{ fromJson(needs.generate_build_matrix.outputs.matrix) }}
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ matrix.version }}

      - name: Push latest tag
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ matrix.tags }}
